import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Calendar } from '@/components/ui/calendar';

const NasaViewer = () => {
  const [date, setDate] = useState(new Date());
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      setError(null);
      try {
        const dateStr = date.toISOString().split('T')[0];
        const response = await fetch(
          `https://api.nasa.gov/planetary/apod?date=${dateStr}&api_key=DEMO_KEY`
        );
        if (!response.ok) {
          throw new Error('Failed to fetch data');
        }
        const result = await response.json();
        setData(result);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, [date]);

  return (
    <div className="max-w-4xl mx-auto p-4">
      <Card>
        <CardHeader>
          <CardTitle>NASA Astronomy Picture of the Day</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <Calendar
                mode="single"
                selected={date}
                onSelect={(newDate) => newDate && setDate(newDate)}
                disabled={(date) => date > new Date()}
                className="rounded-md border"
              />
            </div>
            <div className="md:col-span-2">
              {loading && <p className="text-gray-500">Loading...</p>}
              {error && <p className="text-red-500">Error: {error}</p>}
              {data && !loading && !error && (
                <div>
                  <h3 className="text-lg font-semibold mb-2">{data.title}</h3>
                  <p className="mb-4 text-gray-600">{data.explanation}</p>
                  {data.media_type === 'image' ? (
                    <img
                      src={data.url}
                      alt={data.title}
                      className="w-full rounded-lg"
                    />
                  ) : data.media_type === 'video' ? (
                    <iframe
                      src={data.url}
                      title={data.title}
                      className="w-full h-96 rounded-lg"
                      frameBorder="0"
                      allowFullScreen
                    />
                  ) : (
                    <p className="text-red-500">Unsupported media type</p>
                  )}
                </div>
              )}
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default NasaViewer;
