name: demo-r-shinylive-app

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Setup R dependency for Shiny App
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages:
            any::shiny
            any::httpuv
            any::httr
            any::jsonlite
            any::rsconnect

      - name: Create static files directory
        run: mkdir -p _site

      - name: Generate static version
        run: |
          Rscript -e "
          library(shiny)
          library(rsconnect)
          source('app.R')

          # Create index.html with necessary dependencies
          staticPath <- '_site'
          dir.create(staticPath, showWarnings = FALSE)

          # Write a basic HTML file that will load your app
          writeLines(
            sprintf('
            <!DOCTYPE html>
            <html>
            <head>
              <title>NASA APOD Viewer</title>
              <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
              <script src="https://cdn.jsdelivr.net/npm/shiny@1.7.1/dist/shiny.min.js"></script>
              <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/shiny@1.7.1/dist/shiny.min.css"/>
            </head>
            <body>
              <div id=\"shiny-app\"></div>
              <script>
                $(document).ready(function() {
                  window.app = new Shiny.App(\"shiny-app\");
                });
              </script>
            </body>
            </html>
            '),
            file.path(staticPath, 'index.html')
          )

          # Copy necessary app files
          file.copy('app.R', file.path(staticPath, 'app.R'), overwrite = TRUE)
          "

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
