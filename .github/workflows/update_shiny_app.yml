# https://github.com/coatless-tutorials/convert-shiny-app-r-shinylive/blob/main/.github/workflows/build-and-deploy-shinylive-r-app.yml

on:
    push:
      branches: [main, master]
    release:
        types: [published]
    workflow_dispatch: {}

name: demo-r-shinylive-app

jobs:
    demo-website:
      runs-on: ubuntu-latest
      # Only restrict concurrency for non-PR jobs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      concurrency:
        group: r-shinylive-website-${{ github.event_name != 'pull_request' || github.run_id }}
      # Describe the permissions for obtain repository contents and
      # deploying a GitHub pages website for the repository
      permissions:
        contents: read
        pages: write
        id-token: write
      steps:
        # Obtain the contents of the repository
        - name: "Check out repository"
          uses: actions/checkout@v4

        # Install R on the GitHub Actions worker
        - name: "Setup R"
          uses: r-lib/actions/setup-r@v2

        # Install and pin the shinylive R package dependency
        - name: "Setup R dependency for Shinylive App export"
          uses: r-lib/actions/setup-r-dependencies@v2
          with:
            packages:
              cran::shinylive

        # Export the current working directory as the shiny app
        # using the pinned version of the Shinylive R package
        - name: Create Shinylive App from working directory files
          shell: Rscript {0}
          run: |
           shinylive::export(".", "_site")

        # Upload a tar file that will work with GitHub Pages
        # Make sure to set a retention day to avoid running into a cap
        # This artifact shouldn't be required after deployment onto pages was a success.
        - name: Upload Pages artifact
          uses: actions/upload-pages-artifact@v2
          with:
            retention-days: 1

        # Use an Action deploy to push the artifact onto GitHub Pages
        # This requires the `Action` tab being structured to allow for deployment
        # instead of using `docs/` or the `gh-pages` branch of the repository
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v2
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}

# name: Update and Deploy Shiny App

# on:
#   schedule:
#     - cron: '0 0 * * *'  # Runs daily at midnight UTC
#   push:
#     branches:
#       - main

# jobs:
#   update_shiny_app:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up R
#       uses: r-lib/actions/setup-r@v2

#     - name: Cache R packages
#       uses: actions/cache@v2
#       with:
#         path: ~/.R/Library
#         key: ${{ runner.os }}-r-${{ hashFiles('**/*') }}
#         # key: ${{ runner.os }}-r-${{ hashFiles('**/DESCRIPTION') }}-shiny-httr-jsonlite
#         restore-keys: |
#           ${{ runner.os }}-r-

#     - name: Install dependencies
#       run: |
#         Rscript -e 'install.packages(c("shiny", "httr", "jsonlite", "rsconnect", "curl"), dependencies = TRUE)'
#       # TODO: daily run command?

#     - name: Deploy to GitHub Pages
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: .

#     # - name: Deploy to GitHub Pages
#     #   run: |
#     #     Rscript -e 'rsconnect::deployApp(appDir = ".", appFiles = c("app.R"), appName = "nasa_app", account = "JohnGavin")'
#     #   env:
#     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
